[tox]
envlist = code_autoformat,docs,py_futurize_stage_1,py_futurize_stage_2,py{27,36}
minversion = 3.8.1
skip_missing_interpreters = true

[testenv]
passenv = test_flags
commands =
    nosetests --with-xunitmp --with-xcoverage --cover-package={env:test_flags} --xunit-file=nosetests_{envname}.xml

deps =
    coverage
    katcp
    mock
    nose
    nose_xunitmp
    nosexcover
    numpy

whitelist_externals =
    bash
    curl
    find
    grep
    make

# TODO - Remove when done with the migration
[testenv:code_autoformat]
basepython = python3.6
skip_install = True
description = "This stage will execute black, which will format the whole codebase."
commands =
    curl -sL https://www.gitignore.io/api/python,virtualenv > .gitignore
    black .
deps =
    black==19.10b0
whitelist_externals =
    {[testenv]whitelist_externals}

[testenv:docs]
skip_install = True
description = Generate docs if available
# whitelisting non-virtualenv commands.
whitelist_externals =
    {[testenv]whitelist_externals}
changedir = doc
commands = make html
deps =
    sphinx>=1.2.3, <2.0
    docutils>=0.12, <1.0
    sphinx_rtd_theme>=0.1.5, <1.0
    numpydoc>=0.5, <1.0
    sphinx-pypi-upload

# TODO - Remove when done with the migration
[testenv:py_futurize_stage_1]
skip_install = True
description = "This will modernize Python 2 code only no compatibility with Python 3"
toxworkdir = {toxinidir}
deps =
    future
    futures
    ipython
commands =
    bash -c "find . -name '*.py' -type f -print | \
                grep -v '.tox' | grep -v '.eggs' | \
                xargs futurize --stage1 --write --all-imports --nobackups"
whitelist_externals =
    {[testenv]whitelist_externals}

# TODO - Remove when done with the migration
[testenv:py_futurize_stage_2]
skip_install = True
description = "Adds a dependency on future to provide Py3 compatibility including cleanup."
toxworkdir = {toxinidir}
deps =
    {[testenv:py_futurize_stage_1]deps}
commands =
    bash -c "find . -name '*.py' -type f -print | \
                grep -v '.tox' | grep -v '.eggs' | \
                xargs futurize --stage2 --write --all-imports --nobackups"
    bash -c "grep --exclude=tox.ini -rl 'from __future__ import unicode_literals' | \
                xargs sed -e 's/from __future__ import unicode_literals//g' -i"
    bash -c "grep --exclude=tox.ini -rl 'from builtins import str' | \
                xargs sed -e 's/from builtins import str//g' -i"
    bash -c "grep --exclude=tox.ini -rl 'from builtins import *' | \
                xargs sed -e 's/from builtins import \*//g' -i"

whitelist_externals =
    {[testenv]whitelist_externals}
